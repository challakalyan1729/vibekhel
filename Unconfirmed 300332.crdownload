async function loadEvents() {
  try {
    const response = await fetch('/.netlify/functions/get-events');
    const events = await response.json();
    displayEvents(events);
  } catch (error) {
    console.error('Error loading events:', error);
  }
}

function displayEvents(events) {
  const eventList = document.getElementById('eventList');
  eventList.innerHTML = events.map(event => `
    <div class="event-card">
      <img src="[invalid url, do not cite]" alt="${event.sport}">
      <div class="details">
        <h3>${event.sport} ${event.event_name || 'Event'}</h3>
        <p>Organized by ${event.organizer || 'Local Club'}</p>
        <p class="meta">📍 ${event.location} | 📅 ${event.date} | ⏰ ${event.time} | 👥 ${event.participants || '0'} participants</p>
        <button onclick="joinEvent(${event.event_id})">Join Event</button>
      </div>
    </div>
  `).join('');
}

function filterEvents(type, value = '') {
  fetch('/.netlify/functions/get-events')
    .then(response => response.json())
    .then(events => {
      let filtered = events;
      if (type !== 'all' && type !== 'search') {
        filtered = events.filter(e => e.sport.toLowerCase() === value.toLowerCase());
      } else if (type === 'search') {
        filtered = events.filter(e => e.location.toLowerCase().includes(value.toLowerCase()) || e.sport.toLowerCase().includes(value.toLowerCase()));
      } else if (type === 'nearby') {
        filtered = events.filter(e => e.location.toLowerCase().includes('hyderabad')); // Placeholder logic
      }
      displayEvents(filtered);
      document.querySelectorAll('.filters button').forEach(btn => btn.classList.remove('active'));
      if (type !== 'search' && type !== 'nearby') document.querySelector(`button[onclick="filterEvents('${value}')"]`).classList.add('active');
    });
}

async function addEvent(event) {
  event.preventDefault();
  const form = document.getElementById('eventFormData');
  const formData = new FormData(form);
  const data = Object.fromEntries(formData);
  if (data.sport && data.location && data.date && data.time) {
    await fetch('/.netlify/functions/add-event', {
      method: 'POST',
      body: JSON.stringify(data),
      headers: { 'Content-Type': 'application/json' },
    });
    hideEventForm();
    loadEvents();
  } else {
    alert('Please fill all required fields!');
  }
}

function joinEvent(eventId) {
  alert(`Joined event ID: ${eventId}! (Feature to be implemented)`);
}

function showEventForm() {
  document.getElementById('eventForm').style.display = 'block';
}

function hideEventForm() {
  document.getElementById('eventForm').style.display = 'none';
}

function toggleLogin() {
  const modal = document.getElementById('loginModal');
  modal.style.display = modal.style.display === 'block' ? 'none' : 'block';
}

document.getElementById('eventFormData').addEventListener('submit', addEvent);
document.getElementById('loginForm').addEventListener('submit', (e) => {
  e.preventDefault();
  alert('Sign in feature to be implemented!');
  toggleLogin();
});

window.addEventListener('load', loadEvents);